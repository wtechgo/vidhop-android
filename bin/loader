#!/bin/bash

shared="/data/data/com.termux/files/home/storage/shared"
vidhop_dir="$shared/VidHop"
vidhop_app_dir="$PREFIX/opt/vidhop"
bin_dir="$vidhop_app_dir/bin"

# overwrites $vidhop_dir, $vidhop_app_dir and $bin_dir with values from config.ini (if needed).
[ -f "$vidhop_app_dir/config.ini" ] && . "$vidhop_app_dir/config.ini"

. "$bin_dir/vars" # overwrites all vars from config.ini except $vidhop_dir, $vidhop_app_dir, $bin_dir
. "$bin_dir/config"
. "$bin_dir/common"
. "$bin_dir/logger"
. "$bin_dir/history"
. "$bin_dir/files"
. "$bin_dir/metadata"

. "$bin_dir/dlv"
. "$bin_dir/fvid"
. "$bin_dir/batch"
. "$bin_dir/sync" # from workstation to phone
. "$bin_dir/debug"

[ -f "$vidhop_app_dir/config.ini" ] && . "$vidhop_app_dir/config.ini" # overwrites sync vars with values from config.ini

function updateytdlp() {
  echo "> Updating YT-DLP via Python package manager..." && sleep 1
  pip install -U pip
  python -m pip install yt-dlp -U
}

function install_loader() {
  loader="$bin_dir/loader"
  loader_bin="$PREFIX/bin/vidhop"
  echo "> Installing VidHop loader to $loader_bin..." && sleep 1
  echo '#!/bin/bash' >"$loader_bin"
  echo >>"$loader_bin"
  echo ". $loader" >>"$loader_bin"
  chmod +x "$loader_bin"
  . vidhop
}

function installloader() {  # alias for phone hand typing
  install_loader
}

function fetch_github() {
  echo "> Updating VidHop code at $vidhop_app_dir..."
  echo "> Fetching from GitHub..." && sleep 1
  git fetch --all
  git reset --hard origin/master
  sleep 2
  . "$PREFIX/opt/vidhop/bin/loader"
}

function update_system() {
  echo "> Updating & upgrading Termux system..." && sleep 1
  yes | apt update
  yes | apt upgrade
  yes | pkg update
  yes | pkg upgrade
}

function updatevidhop() {
  pwd=$(pwd) && cd "$vidhop_app_dir"
  update_system
  fetch_github
  updateytdlp
  install_loader
  echo -e "\n${GREEN}VidHop updated ! ${NC}\n\nReload VidHop by choosing one of these two options:"
  echo -e "  1. Close Termux and reopen Termux.\n  2. Execute '. vidhop'"
  cd "$pwd"
}

function updatevidhopbin() {
  pwd=$(pwd) && cd "$vidhop_app_dir"
  fetch_github
  updateytdlp
  install_loader
  echo -e "\n${GREEN}VidHop updated ! ${NC}\n\nReload VidHop by choosing one of these two options:"
  echo -e "  1. Close Termux and reopen Termux.\n  2. Execute '. vidhop'"
  cd "$pwd"
}

function uninstallvidhop() {
  echo "This is the uninstallation program for VidHop."
  echo "Uninstall removes all program files."
  echo "It does not delete your downloads in the VidHop directory."
  echo -n 'Are you sure you want to uninstall VidHop? y/N: ' && read -r answer
  answer=$(echo "$answer" | tr '[:upper:]' '[:lower:]')
  [ "$answer" = "n" ] || [ -z "$answer" ] && echo "aborted uninstall" && return
  [ "$answer" = "y" ] &&
    sudo rm "/usr/local/bin/vidhop" &&
    rm -rf "/opt/vidhop"
}

function loader_help() {
  echo " Title: loader"
  echo " Description: VidHop management functions."
  echo " Commands:"
  echo "    updateytdlp => Updates YT-DLP with pip (Python package manager)."
  echo "    install_loader => Enables users to reload with '. vidhop'"
  echo "    installloader => Alias for the previous for Termux."
  echo "    fetch_github => Download the newest VidHop code from GitHub."
  echo "    updatevidhop => Default update."
  echo "    updatevidhopbin => Update only files in vidhop/bin."
  echo "    uninstallvidhop => Remove all VidHop executables, downloaded data in the VidHop directory will NOT be deleted."
}

function vidhophelp() {
  dlv_help && echo
  fvid_help && echo
  files_help && echo
  metadata_help && echo
  history_help && echo
  sync_help && return
  loader_help && return
}
